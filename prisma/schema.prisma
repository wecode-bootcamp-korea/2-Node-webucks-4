// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

model Category {
  id       Int       @id @default(autoincrement())
  category String    @map("name")
  Product  Product[]

  @@map("categories")
}

model Product {
  id                 Int                  @id @default(autoincrement())
  koreanName         String               @map("korean_name")
  englishName        String               @map("english_name")
  categoryId         Int                  @map("category_id")
  Category           Category             @relation(fields: [categoryId], references: [id])
  Image              Image[]
  ProductAllergy     ProductAllergy[]
  Nutrition          Nutrition[]
  ProductDescription ProductDescription[]

  @@map("products")
}

model Image {
  id        Int     @id @default(autoincrement())
  imageUrl  String  @map("image_url") @db.VarChar(2000)
  productId Int     @map("product_id")
  Product   Product @relation(fields: [productId], references: [id])

  @@map("images")
}

model Allergy {
  id             Int              @id @default(autoincrement())
  name           String
  ProductAllergy ProductAllergy[]

  @@map("allergies")
}

model ProductAllergy {
  id        Int     @id @default(autoincrement())
  productId Int     @map("product_id")
  allergyId Int     @map("allergy_id")
  Product   Product @relation(fields: [productId], references: [id])
  Allergy   Allergy @relation(fields: [allergyId], references: [id])

  @@map("products_allergies")
}

model Nutrition {
  id        Int     @id @default(autoincrement())
  name      String
  productId Int     @map("product_id")
  amount    Float
  Product   Product @relation(fields: [productId], references: [id])

  @@map("nutritions")
}

model User {
  id           Int     @id @default(autoincrement())
  email        String  @unique
  password     String
  username     String?
  address      String?
  phoneNumber  String? @map("phone_number")
  policyAgreed Boolean @default(true) @map("policy_agreed")

  @@map("users")
}

model ProductDescription {
  id          Int     @id @default(autoincrement())
  description String
  productId   Int     @map("product_id")
  Product     Product @relation(fields: [productId], references: [id])

  @@map("product_descriptions")
}
